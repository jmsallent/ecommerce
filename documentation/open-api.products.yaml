openapi: 3.0.0
info:
  title: Products API
  version: 1.0.0
  description: API Products

paths:
  /products:
    get:
      summary: Obtener todos los productos
      responses:
        '200':
          description: Lista de productos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      summary: Crear un nuevo producto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Producto creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /products/{productId}:
    parameters:
      - in: path
        name: productId
        required: true
        schema:
          type: string
        description: ID del producto
    get:
      summary: Obtener un producto por ID
      responses:
        '200':
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Producto no encontrado
    put:
      summary: Actualizar un producto por ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Producto actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Producto no encontrado
    delete:
      summary: Eliminar un producto por ID
      responses:
        '204':
          description: Producto eliminado exitosamente
        '404':
          description: Producto no encontrado
  /products/get/count:
    get:
      summary: Obtener el contador de los productos
      responses:
        '200':
          description: Lista de productos
          content:
            application/json:
              schema:
                type: object

  /products/get/featured/:count:
    parameters:
      - in: path
        name: :count
        required: true
        schema:
          type: number
        description: Limite de conseguir los productos promocionados
  /users:
    get:
      summary: Obtener todos los usuarios
      responses:
        '200':
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Crear un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Usuario creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{userId}:
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
        description: ID del usuario
    get:
      summary: Obtener un usuario por ID
      responses:
        '200':
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Usuario no encontrado
    put:
      summary: Actualizar un usuario por ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Usuario actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Usuario no encontrado
    delete:
      summary: Eliminar un usuario por ID
      responses:
        '204':
          description: Usuario eliminado exitosamente
        '404':
          description: Usuario no encontrado
  /user/login:
    post:
      summary: Loguease un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Usuario logueado exitosamente
  /user/register:
    post:
      summary: Loguease un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Usuario logueado exitosamente
          
components:
  schemas:
    Product:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        richDescription:
          type: string
        image:
          type: string
        images:
          type: array
        brand:
          type: string
        price:
          type: number
        countInStock:
          type: number
        rating:
          type: number
        numReviews:
          type: number
        isFeatured:
          type: boolean
        dateCreated:
          type: string
      required:
        - name
        - price
    Category:
      type: object
      properties:
        name:
          type: string
        icon:
          type: string
        color:
          type: string
      required:
        - name
    User:
      type: object
      properties:
        id_user:
          type: string
        email:
          type: string
        passwordHash:
          type: string
        phone:
          type: number
        isAdmin:
          type: boolean
        street:
          type: string
        apartment:
          type: string
        zip:
          type: string
        city:
          type: string
        country:
          type: string
      required:
        - name
    Order:
      type: object
      properties:
        orderItems:
          type: array
        shippingAddress1:
          type: string
        shippingAddress2:
          type: string
        city:
          type: string
        zip:
          type: string
        country:
          type: string
        phone:
          type: string
        status:
          type: string
        totalPrice:
          type: number
        otalPrice:
          type: string
      required:
        - name
    OrderItem:
      type: object
      properties:
        quantity:
          type: number